pipeline 
// { 
//     agent any 
// parameters
//     { 
//         gitParameter branchFilter: 'origin/(.*)', defaultValue: 'master', name: 'BRANCH', type: 'PT_BRANCH' 
//         extendedChoice(defaultValue: '', description: 'server-name', multiSelectDelimiter: ',', name: 'ServerName', quoteValue: false, saveJSONParameterToFile: false, type: 'PT_CHECKBOX', value: 'lou-dev-notify-web2.hellospoke.com,lou-dev-notify-web1.hellospoke.com', visibleItemCount: 8)
//     }
//     stages 
//     { 
//        stage("list all branches") 
//        { 
//            steps 
//            { 
//                 git branch: "${params.BRANCH}", url: "https://github.com/yuvraj-squareops1/testsmodule.git" 
//            } 
//       } 
//     stage("list all folder") 
//        { 
//            steps 
//            { 
//                 sh 'ls -la'
//            } 
//       }
//     stage("print variable") 
//        { 
//            steps 
//            { 
//                 sh "echo ${params.ServerName}"
//            } 
//       }
//    } 
// }



pipeline 
{ 
    agent any 
   parameters
    { 
        gitParameter branchFilter: 'origin/(.*)', defaultValue: 'master', name: 'BRANCH', type: 'PT_BRANCH' 
        extendedChoice(defaultValue: '', description: 'server-name', multiSelectDelimiter: ',', name: 'ServerName', quoteValue: false, saveJSONParameterToFile: false, type: 'PT_CHECKBOX', value: 'lou-dev-notify-web2.hellospoke.com,lou-dev-notify-web1.hellospoke.com', visibleItemCount: 8)
    }
    environment {
        high = 400
        critical = 70
    }
    stages 
    { 
       stage("list all branches") 
       { 
           steps 
           { 
                git branch: "${params.BRANCH}", url: "https://github.com/yuvraj-squareops1/testsmodule.git" 
           } 
      } 
          stage('Stage 1') {
                    steps {
                         script {
                              // Some logic to calculate the value of MY_VARIABLE
                              high = 551
                              critical = 100
                              echo "Value of MY_VARIABLE in Stage 1: ${high}, ${critical}"
                         }
                    }
               }
        stage("Print Variable") {
            steps {
                script {
                    echo 'Push to ECR step start'
                    if (high < 500 && critical < 80) {
                        echo 'Pushed to ECR'
                        // Add your ECR push steps here instead of just echoing
                    } else {
                        echo "The image can't be pushed due to too many vulnerabilities"
                        error("Aborting the pipeline")
                    }
                }
            }
        }
    }
}
